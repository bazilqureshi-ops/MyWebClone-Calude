@using Emse.QMagic.Web.Domain.Viewmodels
@model StatusViewModel

<link href="~/assets/css/pickr.min.css" rel="stylesheet" />

<script>
    $(document).on('submit', 'form', function () {
        var button = $(this).find(':submit');
        setTimeout(function () {
            button.attr('disabled', 'disabled');
        }, 0);
    });
</script>

<div class="row">
    <div class="col-xs-12 col-md-8 col-md-offset-2 col-lg-8 col-lg-offset-2">
        @if (!string.IsNullOrEmpty(ViewBag.Error))
        {

            var status = ViewBag.Entity;

            <div class="alert-danger" style="margin-bottom: 10px;">
                <label style="padding: 10px">
                    @ViewBag.Error <a href="/status/editstatus?id=@status.StatusID">here.</a>
                </label>
            </div>

        }

        <div class="card">
            <div class="card-header">
                @if (Model.Status.StatusID > 0)
                {
                    <label>
                        Update Status
                    </label>
                }
                else
                {
                    <label>
                        Create a New Status
                    </label>
                }
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Save", "Status", FormMethod.Post, new { @id = "statusForm", enctype = "multipart/form-data" }))
                {
                    @Html.Hidden("Status.StatusID", Model.Status.StatusID, new { @id = "statusId" })
                    @Html.Hidden("Status.StatusColor", Model.Status.StatusColor, new { @id = "colorId" })
                    @Html.Hidden("StatusNameHashed", Model.StatusNameHashed, new { @id = "statusNameHashed" })


                    <div class="row">
                        <div class="col-xs-12 col-md-12 col-lg-12">
                            <div class="row">
                                <div class="col-xs-12 col-md-6 col-lg-6">
                                    <div class="form-group">
                                        <label class="col-md-3 control-label"> Status Name </label>
                                        <div class="col-md-9">
                                            @Html.EditorFor(customer => customer.Status.StatusName, new { htmlAttributes = new { @class = "form-control" } })
                                            <label class="text-danger">
	                                            @Html.ValidationMessageFor(customer => customer.Status.StatusName)
                                            </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-xs-12 col-md-6 col-lg-6">
                                    <div class="form-group">
                                        <label class="col-md-3 control-label"> Color </label>
                                        <div class="col-md-9" id="userOption">
                                            <div class="center">
                                                <div id="color-picker"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="form-footer text-right">
                            <div class="form-group">
                                <div class="col-md-9 col-md-offset-3">
                                    <a href="../Status" class="btn btn-default">Cancel</a>
                                    <button type="submit" class="btn btn-primary">Save</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script src="~/assets/js/pickr.min.js"></script>
<script>
    const pickr = new Pickr({
    el: '#color-picker',

    default: '#42445A',

    //swatches: [
    //    '#F44336',
    //    '#E91E63',
    //    '#9C27B0',
    //    '#673AB7',
    //    '#3F51B5',
    //    '#2196F3',
    //    '#03A9F4',
    //    '#00BCD4',
    //    '#009688',
    //    '#4CAF50',
    //    '#8BC34A',
    //    '#CDDC39',
    //    '#FFEB3B',
    //    '#FFC107'
    //],

    components: {

        preview: true,
        opacity: false,
        hue: true,

        interaction: {
            hex: true,
            rgba: false,
            hsva: false,
            input: true,
            clear: true,
            save: true
        }
    }
    });

    $(document).ready(function() {
		var statusId = $('#statusId').val();

		$(function() {
			if (statusId > 0) {
				$('.pcr-result').val('#@Model.Status.StatusColor')
			}
		});

        $('.pcr-save').click(function () {
            var changedToHex = $('.pcr-result').val().replace("#","");

            $('#colorId').val(changedToHex);
        });
        if (statusId == 0) {
                $('.pcr-button').css('background', 'rgba(255, 255, 255, 0.4)');
        }
        else if (statusId > 0) {

            var color = $('#colorId').val();
            var trueColor = "rgb(";
            trueColor += hexToRgbNew(color);
            trueColor += ")";

            function hexToRgbNew(hex) {
                var arrBuff = new ArrayBuffer(4);
                var vw = new DataView(arrBuff);
                vw.setUint32(0,parseInt(hex, 16),false);
                var arrByte = new Uint8Array(arrBuff);

                return arrByte[1] + "," + arrByte[2] + "," + arrByte[3];
            }

            $('.pcr-button').css("background", trueColor);
        }
    });
</script>