@using Emse.QMagic.Web.Domain.Viewmodels
@model StatusTerminalViewModel

@{
	var assignmentList = Model.StatusTerminals;
}

<div class="row">
	<div class="col-xs-12 col-md-8 col-md-offset-2">
		@if (!string.IsNullOrEmpty(ViewBag.Error))
		{

			var status = ViewBag.Entity;

			<div class="alert-danger" style="margin-bottom: 10px;">
				<label style="padding: 10px">
					@ViewBag.Error
				</label>
			</div>

		}

		<div class="card">
			<div class="card-header">
				<label>
					Assign a Status To Terminal
				</label>
			</div>
			<div class="card-body">
				@using (Html.BeginForm("Assign", "Status", FormMethod.Post, new { @id = "statusForm", enctype = "multipart/form-data" }))
				{

					<div class="row">
						<div class="col-xs-12 col-md-12 col-lg-12">
							<div class="row">
								<div class="col-xs-12 col-md-6 col-lg-6">
									<div class="form-group">
										<label class="col-xs-12 col-md-4 col-lg-4 control-label"> Status Name </label>
										<div class="col-xs-12 col-md-8 col-lg-8">
											@Html.DropDownListFor(status => status.StatusTerminal.StatusID, Model.Statuses, new { @class = "select2" })
											<label class="text-danger">
												@Html.ValidationMessageFor(status => status.StatusTerminal.StatusID)
											</label>
										</div>
									</div>
								</div>

								<div class="col-xs-12 col-md-6 col-lg-6">
									<div class="form-group">
										<label class="col-xs-12 col-md-4 col-lg-4 control-label"> Terminal Name </label>
										<div class="col-xs-12 col-md-8 col-lg-8">
											@Html.DropDownListFor(terminal => terminal.StatusTerminal.TerminalID, Model.Terminals, new { @class = "select2 select-change" })

											<label class="text-danger">
												@Html.ValidationMessageFor(terminal => terminal.StatusTerminal.TerminalID)
											</label>
										</div>
									</div>
								</div>
							</div>

							<br />
							<br />
						</div>
						<div class="form-footer text-right">
							<div class="form-group">
								<div class="col-md-9 col-md-offset-3">
									<a href="../Status" class="btn btn-default">Cancel</a>
									<button type="button" class="btn btn-primary">Show All Assignments</button>
									<button type="submit" class="btn btn-warning">Assaign Status</button>
								</div>
							</div>
						</div>
					</div>
				}
			</div>
		</div>
	</div>
</div>

<div class="row">
	<div class="col-xs-12 col-md-8 col-md-offset-2">
		<div class="card">
			<div class="card-header">
				<label>
					Assignment List
				</label>
			</div>
			<div class="card-body no-padding">
				<table class="datatable table table-striped primary" cellspacing="0" width="100%">
					<thead>
						<tr>
							<th>Status Name</th>
							<th>Terminal Name</th>
							<th>Action</th>
						</tr>
					</thead>
					<tbody>
						@{
							if (assignmentList.Count > 0)
							{
								foreach (var item in assignmentList)
								{
									<tr>
										<td>@item.qmStatus.StatusName</td>
										<td>@item.qmTerminal.TerminalName</td>

										<td class="col-xs-2">
											<button type="button" value="@item.StatusTerminalID" class="btn btn-danger"><span class="fa fa-remove"></span></button>
										</td>
									</tr>
								}
							}
						}
					</tbody>
				</table>
			</div>
		</div>
	</div>
</div>

<link href="~/assets/css/sweetalert2.min.css" rel="stylesheet" />
<script src="~/assets/js/sweetalert2.all.min.js"></script>

<script>
	$(document).ready(function () {
		var table = $('.dataTable').DataTable();

		//Delete Assigment
		$(function () {
			$('.datatable').on('click',
				'.btn-danger',
				function () {
					var deleteRow = table.row($(this).parents('tr'));
					var value = $(this).val();

					swal({
						title: "Are you sure to delete this assigment?",
						text: "If you delete the assigment, you will not able to see this status on terminal",
						icon: "warning",
						buttons: true,
						dangerMode: true,
					})
						.then((willDelete) => {
							if (willDelete) {
								$.ajax({
									type: "POST",
									url: "/Status/DeleteAssignment",
									data: "id=" + value,
									success: function (result) {

										//Delete Row
										deleteRow.remove().draw();
									}
								});
							}

						});
				})
		})

		//Select Terminal
		$(function () {
			$('.select-change').change(function () {
				var value = $(this).val();

				GetAssignment(value);
			})
		})

		//Show All
		$(function () {
			$('.btn-primary').click(function () {
				GetAssignment();
			})
		})

		//Getting Assignment
		function GetAssignment(id) {

			if (id > 0) {
				$.ajax({
					type: "POST",
					url: "/Status/GetTerminalAssign",
					data: "id=" + id,
					success: function (result) {
						table.clear().draw();

						for (var i = 0; i < result.length; i++) {
							table.row.add([
								'' + result[i].qmStatus.StatusName + '',
								'' + result[i].qmTerminal.TerminalName + '',
								'<button type="button" value="' +
								result[i].StatusTerminalID +
								'" class="btn btn-danger"><span class="fa fa-remove"></span></button>'
							]).draw(false);
						}

					}
				});
			}
			else {
				$.ajax({
					type: "POST",
					url: "/Status/GetTerminalAssign",
					success: function (result) {
						table.clear().draw();

						for (var i = 0; i < result.length; i++) {
							table.row.add([
								'' + result[i].qmStatus.StatusName + '',
								'' + result[i].qmTerminal.TerminalName + '',
								'<button type="button" value="' +
								result[i].StatusID +
								'" class="btn btn-danger"><span class="fa fa-remove"></span></button>'
							]).draw(false);
						}

					}
				});
			}
		}
	})
</script>