@using Emse.QMagic.Web.Models;
@model Emse.QMagic.Web.Models.qmAppointment
@{
    /**/

    ViewBag.Title = "Edit Schedule";
    Layout = "~/Views/Shared/_Layout.cshtml";

    qmAppointment appointment = ViewBag.data;

    List<qmService> Services = ViewBag.services;
    List<qmSegment> Segments = ViewBag.segments;
    List<qmAppointmentDisable> Disableds = ViewBag.disables;
    List<qmBranch> Branches = ViewBag.Branches;
}

<link href="~/assets/css/jquery.datetimepicker.min.css" rel="stylesheet" />
<script src="~/assets/js/jquery.datetimepicker.full.js"></script>

<div class="row">
    <div class="col-xs-9">
        <div class="card">
            <div class="card-header">
                Appointment Schedule Management
            </div>
            <div class="card-body">
                @using (Html.BeginForm())
                {
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">Branch</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        <select class="select2" name="data_BranchID">
                                            @{
                                                foreach (var item in Branches)
                                                {
                                                    if (item.BranchID == appointment.BranchID)
                                                    {
                                                        <option value="@item.BranchID" selected="selected">@item.BranchName</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@item.BranchID">@item.BranchName</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">Segment</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        <select class="select2" name="data_SegmentID">
                                            @{
                                                foreach (var item in Segments)
                                                {
                                                    if (item.SegmentID == appointment.SegmentID)
                                                    {
                                                        <option value="@item.SegmentID" selected="selected">@item.SegmentName</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@item.SegmentID">@item.SegmentName</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">Schedule Name</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        @Html.EditorFor(model => appointment.ApointmentName, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">Start Date</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        <input type="datetime" id="appointment_StartDate" name="appointment.StartDate" class="form-control datetime" value="@(appointment.StartDate.Year+"-"+appointment.StartDate.Month+"-"+appointment.StartDate.Day+" "+appointment.StartDate.Hour+":"+appointment.StartDate.Minute+":"+appointment.StartDate.Second)" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">End Date</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        <input type="datetime" id="appointment_EndDate" name="appointment.EndDate" class="form-control datetime" value="@(appointment.EndDate.Year+"-"+appointment.EndDate.Month+"-"+appointment.EndDate.Day+" "+appointment.EndDate.Hour+":"+appointment.EndDate.Minute+":"+appointment.EndDate.Second)" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">Break Time</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        @Html.EditorFor(model => appointment.BreakStart, new { htmlAttributes = new { @class = "form-control time" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">Break End Time</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        @Html.EditorFor(model => appointment.BreakEnd, new { htmlAttributes = new { @class = "form-control time" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">Appointment Per Hour</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        @Html.EditorFor(model => appointment.AppointmentPerHour, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">Is Active</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        @Html.EditorFor(model => appointment.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">Check-in Time</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        @Html.EditorFor(model => appointment.CheckInTime, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <select name="lstDate" id="lstDate" class="form-control" multiple="multiple" style="display:none;">
                        </select>

                        <div class="form-footer text-right">
                            <div class="form-group">
                                <div class="col-md-9 col-md-offset-3">
                                    <a href="../Appointment/ListSchedule" class="btn btn-default">Cancel</a>
                                    <a href="javascript:SubmitForm();" class="btn btn-primary">Save</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-xs-3">
        <div class="card">
            <div class="card-header">
                Disabled Dates
            </div>
            <div class="card-body" style="padding:0px; max-height:400px; overflow-y:scroll;">
                <table width="100%" border="0" cellpadding="0" cellspacing="0" id="DisabledTable">
                    <tr id="adder">
                        <td><input type="date" id="AdderPicker" class="date form-control" /></td>
                        <td><button class="btn btn-default" onclick="AddDate();">+</button></td>
                    </tr>
                    @{
                        int DisCount = 1;
                        foreach (qmAppointmentDisable item in Disableds)
                        {
                            <tr id="Dis_@(DisCount)">
                                <td>@(item.DisabledDate.Year+"-"+ item.DisabledDate.Month+"-"+ item.DisabledDate.Day)</td>
                                <td>
                                    <button class="btn btn-default" onclick="RemoveDate(@(DisCount), '@(item.DisabledDate.Year)-@(item.DisabledDate.Month)-@(item.DisabledDate.Day)');">-</button>
                                </td>
                            </tr>
                            DisCount++;
                        }
                    }
                </table>
            </div>
        </div>
    </div>

</div>


<script type="text/javascript">
	$(document).ready(function () {
		$('.datetime').datetimepicker({
			locale: 'ru',
			format: "YYYY-MM-DD HH:mm:ss"
		});

		$('.date').datetimepicker({
			locale: 'ru',
			format: "YYYY-MM-DD"
		});

		$('.time').datetimepicker({
			locale: 'ru',
			format: "HH:mm"
		});
    });

    var DisabledCount = 0;
    const DisDates = [
        @{
            foreach (qmAppointmentDisable item in Disableds)
            {
                string dater = item.DisabledDate.Year + "-" + item.DisabledDate.Month + "-" + item.DisabledDate.Day;
                if(Disableds[Disableds.Count-1] == item)
                {
                    @(Html.Raw("'"+ dater + "'"))
                }
                else
                {
                    @(Html.Raw("'"+ dater + "',"))
                }
            }
        }
    ];

    function AddDate() {
        var thedate = $("#AdderPicker").val();
        DisabledCount++;
        $("#DisabledTable").append("<tr id='Dis_" + DisabledCount + "'><td>" + thedate + "</td><td><button class='btn btn-default' onclick='RemoveDate(" + DisabledCount + ", \"" + thedate + "\");'>-</button></td></tr> ");
        DisDates.push(thedate);
        console.log(DisDates);
    }

    function RemoveDate(DateID, DateSelf) {
        $("#Dis_" + DateID).remove();
        const indis = DisDates.indexOf(DateSelf, 0);
        if (indis > -1) {
            DisDates.splice(indis, 1);
        }
        console.log(DisDates);
    }

    function SubmitForm() {
        var SDate = new Date($("#appointment_StartDate").val());
        var EDate = new Date($("#appointment_EndDate").val());

        if (SDate > EDate) {
            swal({
                icon: 'error',
                title: 'Oops Date/Time incorrect !',
                text: 'Something went wrong!'
            })
        }
        else {
            for (var i = 0; i < DisDates.length; i++) {
                $("#lstDate").append($("<option></option>").attr("value", DisDates[i]).text(DisDates[i]));
            }
            $('#lstDate option').prop('selected', true);

            $("form").submit();
        }
    }
</script>