@using Emse.QMagic.Web.Models;
@model Emse.QMagic.Web.Models.qmAppointment
@{
    ViewBag.Title = "Create Terminal";
    Layout = "~/Views/Shared/_Layout.cshtml";

    qmAppointment bosapp = new qmAppointment();

    List<qmService> Services = ViewBag.Services;
    List<qmSegment> Segments = ViewBag.Segments;
    List<qmBranch> Branches = ViewBag.Branches;
}

<link href="~/assets/css/sweetalert2.min.css" rel="stylesheet" />
<script src="~/assets/js/sweetalert2.all.min.js"></script>
<script>
    $(document).ready(function () {
        var servicecount = @(Services.Count());
        var segmentcount = @(Segments.Count());
        var branchcount = @(Branches.Count());

        if (branchcount < 1 || servicecount < 1 || segmentcount < 1) {
            var str = "<p>You're not meeting the minimum requirements of creating a new apponintment schedule. You should have at least one branch, service and a segment.</p>";

            if (branchcount < 1) {
                str += "Please < a href = '../Branch' > click here</a > to create new branch.< br /> ";
            }
            if (servicecount < 1) {
                str += "Please <a href='../Service'>click here</a> to create new service.<br/>";
            }
            if (segmentcount < 1) {
                str += "Please <a href='../Segment'>click here</a> to create new segment.<br/>";
            }

            swal({
                title: "Hmm.. Consider This",
                text: str,
                icon: "warning",
                buttons: false,
                dangerMode: true,
                content: str
            });

            $(".swal-text").html(str);
        }
    });
</script>

<div class="row">
    <div class="col-xs-9">
        <div class="card">
            <div class="card-header">
                Appointment Schedule Management
            </div>
            <div class="card-body">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "mainform" }))
                {
                    <div class="row">
                        <div class="col-xs-12 col-md-12 col-lg-12">
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">Branch</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        <select class="select2" name="data_BranchID">
                                            @{
                                                foreach (var item in Branches)
                                                {
                                                    if (item.BranchID == bosapp.BranchID)
                                                    {
                                                        <option value="@item.BranchID" selected="selected">@item.BranchName</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@item.BranchID">@item.BranchName</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">Segment</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        <select class="select2" name="data_SegmentID">
                                            @{
                                                foreach (var item in Segments)
                                                {
                                                    if (item.SegmentID == bosapp.SegmentID)
                                                    {
                                                        <option value="@item.SegmentID" selected="selected">@(Services.Where(x=>x.ServiceID == item.ServiceID).FirstOrDefault().ServiceName) @(item.SegmentName)</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@item.SegmentID">@(Services.Where(x=>x.ServiceID == item.ServiceID).FirstOrDefault().ServiceName) @item.SegmentName</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">Schedule Name</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        @Html.EditorFor(model => bosapp.ApointmentName, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">Start Date</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        @Html.EditorFor(model => bosapp.StartDate, new { htmlAttributes = new { @class = "form-control datetime" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">End Date</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        @Html.EditorFor(model => bosapp.EndDate, new { htmlAttributes = new { @class = "form-control datetime" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">Break Time</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        @Html.EditorFor(model => bosapp.BreakStart, new { htmlAttributes = new { @class = "form-control time" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">Break End Time</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        @Html.EditorFor(model => bosapp.BreakEnd, new { htmlAttributes = new { @class = "form-control time" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">Appointment Per Hour</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        @Html.EditorFor(model => bosapp.AppointmentPerHour, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">Is Active</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        @Html.EditorFor(model => bosapp.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label class="col-xs-12 col-md-3 col-lg-3 control-label">Check-in Time</label>
                                    <div class="col-xs-12 col-md-9 col-lg-9">
                                        @Html.EditorFor(model => bosapp.CheckInTime, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <select name="lstDate" id="lstDate" class="form-control" multiple="multiple" style="display:none;">
                        </select>

                        <div class="form-footer text-right">
                            <div class="form-group">
                                <div class="col-md-9 col-md-offset-3" style="padding-top:15px;">
                                    <a href="../Appointment/ListSchedule" class="btn btn-default">Cancel</a>
                                    <a href="javascript:SubmitForm();" class="btn btn-primary submitter">Save</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-xs-3">
        <div class="card">
            <div class="card-header">
                Disabled Dates
            </div>
            <div class="card-body" style="padding:0px; max-height:400px; overflow-y:scroll;">
                <table width="100%" border="0" cellpadding="0" cellspacing="0" id="DisabledTable">
                    <tr id="adder">
                        <td><input type="date" id="AdderPicker" class="date form-control" /></td>
                        <td><button class="btn btn-default" onclick="AddDate();">+</button></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $('.datetime').datetimepicker({
            locale: 'ru',
            format: "YYYY-MM-DD HH:mm:ss"
        });

        $('.date').datetimepicker({
            locale: 'ru',
            format: "YYYY-MM-DD"
        });

        $('.time').datetimepicker({
            locale: 'ru',
            format: "HH:mm"
        });
        $(".submitter").click(function () {
            $(".submitter").prop('disabled', true);
        });

    });

    var DisabledCount = 0;
    const DisDates = [];

    function AddDate() {
        var thedate = $("#AdderPicker").val();
        DisabledCount++;
        $("#DisabledTable").append("<tr id='Dis_" + DisabledCount + "'><td>" + thedate + "</td><td><button class='btn btn-default' onclick='RemoveDate(" + DisabledCount + ", \"" + thedate + "\");'>-</button></td></tr> ");
        DisDates.push(thedate);
        console.log(DisDates);
    }

    function RemoveDate(DateID, DateSelf) {
        $("#Dis_" + DateID).remove();
        const indis = DisDates.indexOf(DateSelf, 0);
        if (indis > -1) {
            DisDates.splice(indis, 1);
        }
        console.log(DisDates);
    }

    function SubmitForm() {
        var SDate = new Date($("#bosapp_StartDate").val());
        var EDate = new Date($("#bosapp_EndDate").val());

        if (SDate > EDate) {
            swal({
                icon: 'error',
                title: 'Oops Date/Time incorrect !',
                text: 'Something went wrong!'
            })
        }
        else {
            for (var i = 0; i < DisDates.length; i++) {
                $("#lstDate").append($("<option></option>").attr("value", DisDates[i]).text(DisDates[i]));
            }
            $('#lstDate option').prop('selected', true);

            $("form").submit();
        }
    }
</script>