@using Emse.QMagic.Web.Models;
@{
    ViewBag.Title = "Interface Management";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<qmInterface> interfaces = ViewBag.data;
    List<qmBranch> branches = ViewBag.branches;
    List<qmCounterDisplay> counterdisplays = ViewBag.counters;
    List<qmMainDisplay> maindisplays = ViewBag.maindisplays;
    List<qmMDResponsibility> mdresp = ViewBag.maindisplayresponsibility;
}

<link href="~/assets/css/sweetalert2.min.css" rel="stylesheet" />
<script src="~/assets/js/sweetalert2.all.min.js"></script>
@section scripts{
    <script src="~/Scripts/jquery.signalR-2.4.3.min.js"></script>
    <script src="~/SignalR/Hubs"></script>

    <script>
        var signalRHub;
        $(document).ready(function () {
            signalRHub = $.connection.comHub;

            $.connection.hub.start().done(function () {
                connectionID = $.connection.hub.id;
            });

            if ("@(ViewBag.returncode)" == 99) {
                swal({
                    title: "Invalid License Key!",
                    text: "Your license key is not covering this action. Please contact with your local QMagic partner to extend your license.",
                    icon: "warning",
                    buttons: false,
                    dangerMode: true,
                });
            }
        });

        function DeleteRecord(recordid) {
            swal({
                title: "Are you sure want to delete this record?",
                text: "If you delete this record all the data generated from that record also will be deleted. Do you want to proceed?",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        window.location = "../Hardware/DeleteInterface?InterfaceID=" + recordid;
                    } else {
                        swal({
                            title: "Nothing changed",
                            icon: "success"
                        });
                    }
                });
        }

        function RestartDevice(deviceid) {
            swal({
                title: "Restart interface?",
                text: " This interface device will restart itself remotely If device connected to network. If there is a error with network connectivity device will not restart itself.",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                        signalRHub.server.interSend("RestartInterface(" + deviceid + ")").fail(function (e) {
                            alert(e.message);
                        });

                        swal({
                            title: "Device restarted !",
                            icon: "success"
                        });
                    } else {
                        swal({
                            title: "Not restarted !",
                            icon: "warning"
                        });
                    }
                });
        }
    </script>
}
<script>
    
</script>


<div class="row">
    <div class="col-xs-12">
        <div class="card">
            <div class="card-header">
                Interface Management
            </div>
            <div class="card-body no-padding">
                <table class="datatable table table-striped primary" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th>Interface Name</th>
                            <th>Branch Name</th>
                            <th>IP Address</th>
                            <th>Counter</th>
                            <th>Main</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int i = 0;
                            foreach (qmInterface item in interfaces)
                            {
                                <tr>
                                    <td>@item.InterfaceName</td>
                                    <td>@(branches.Where(x => x.BranchID == item.BranchID).FirstOrDefault().BranchName)</td>
                                    <td>@item.IPAddress</td>
                                    <td>@(counterdisplays.Where(x => x.InterfaceID == item.InterfaceID).Count().ToString())</td>
                                    <td>@(mdresp.Where(x => x.InterfaceID == item.InterfaceID).Count().ToString())</td>
                                    <td>
                                        <a href="javascript:RestartDevice(@(item.InterfaceID));" class="btn btn-warning"><span class="fa fa-refresh"></span></a>
                                        <a href="../Hardware/EditInterface?InterfaceID=@(item.InterfaceID)" class="btn btn-default"><span class="fa fa-pencil"></span></a>
                                        <a href="javascript:DeleteRecord(@(item.InterfaceID));" class="btn btn-danger"><span class="fa fa-remove"></span></a>
                                    </td>
                                </tr>

                                i++;
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<div class="btn-floating" id="help-actions">
    <div class="btn-bg"></div>
    <button type="button" class="btn btn-default btn-toggle" data-toggle="toggle" data-target="#help-actions">
        <i class="icon fa fa-plus"></i>
        <span class="help-text">Shortcut</span>
    </button>
    <div class="toggle-content">
        <ul class="actions">
            <li><a href="~/Hardware/CreateInterface">Create Interface</a></li>
        </ul>
    </div>
</div>
